BuildingsPhoto:

Sequence of method calls that lead to the new BuildingsPhoto object:
(1) When a user wants to add a new Photo the createPhoto() method of the PhotoManager (super class of domain PhotoManager) is called 
(2) Within the createPhoto() method from (1) the createPhoto method from PhotoUtil class is called
(3) Within the createPhoto() method of (2) the singleton instance of the domain PhotoFactory (BuildingsPhotoFactory) is fetched
(4) On the singleton BuildingsPhotoFactory instance of (3) the createPhoto() is called with a PhotoID as parameter
(5) Within the BuildingsPhotoFactory the BuildingsPhoto object with the passed PhotoID from (4) is created in the createPhoto() method

Object creation solution in the solution space:
Delegation: separate-object, by BuildingsPhotoFactory 
Selection: no selection (by a user) as presented in lecture so far
Configuration: no selection (by a user) as presented in lecture so far
Instantiation: in-code, by the constructor
Initialization: default, by the constructor
Building: default

Building:

Sequence of method calls that lead to the new Building object:
(0) At the moment there is no UI element or function where a user could call for a Building object creation
(1) (if (0) is implemented): When a user wants to add a new Building one of the createBuilding() methods of the BuildingsManager is called
(2) Within the createBuilding method the getBuildingsType method is called returning an existing or new created BuidlingsType
(3) The createInstance method of BuildingsType than is called, creating a new Building instance
 
Object creation solution in the solution space: 
Delegation: separate-object, by BuilingsType 
Selection: no selection (by a user) as presented in lecture so far 
Configuration: no configuration (by a user) as presented in lecture so far
Instantiation: in-code, by constructor
Initialization: default, by constructor
Building: default
