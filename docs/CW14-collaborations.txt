=============== Collaboration ===============
 
Describes the collaboration that one BuildingsPhoto always represents exact one Building or at least one.
Roles: BuildingsPhoto: “Client”, Building: “Service”

public collaboration BuildingsClientService {

	public role Client {
		public Building getBuilding() {...},
		public void setBuilding(Building building) {...},
		...
	}

	public role Service {
		...
	}

...
}
=============== Usage: ===============

public class BuidlingsPhoto binds BuildingsClientService.Client {
	...
}

public class Building binds BuildingsClientService.Service {
	...
}

=============== Collaboration =============== 

Describes the collaboration between the Building and its type, where the Type object provides describing information of the building for a special type of a building.
Roles: BuildingsType: “Type Object”, Building: “Base Object”

public collaboration BuildingsTypeObject {

	public role TypeObject {
		public Building createInstance( ) {...},
		public void setName(String name) {}
		public String getName() {}
		public String getArchitecture() {}
		public void setArchitecture(String architectureName) {},
		...
	
}

	public role BaseObject {
	…
}

=============== Usage: ===============

public class BuidlingsType binds BuildingsTypeObject.TypeObject {
	...
}

public class Building binds BuildingsTypeObject.BaseObject {
	...
}

=============== Collaboration =============== 

The collaboration between BuildingsManager and Buildings. The BuildingsManager is responsible for managing the Buildings, meaning the Manager object is responsible for creating, getting, searching or handling Buildings Objects.
Roles: BuildingsManager: “Manager”, Building: “managedObject”

public collaboration BuildingsManagerCollaboration {

	public role Manager {
		public static Building getBuilding (...) {},
		public synchronized Building createBuilding(...) {},
		...			
	}

	public role managedObject {
	…
}

=============== Usage: ===============

public class BuidlingsManager binds BuildingsManagerCollaboration.Manager {
	...
}

public class Building binds BuildingsManagerCollaboration.managedObject {
	...
}



